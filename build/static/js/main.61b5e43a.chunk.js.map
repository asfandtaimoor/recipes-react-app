{"version":3,"sources":["components/Recipe.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","imgSrc","calories","ingredients","className","style","width","src","alt","Math","round","map","ingredient","App","useState","Recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipe","a","fetch","response","json","data","hits","console","log","class","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","recipe","label","image","ingredientLines","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAyBeA,G,MAtBA,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACzC,OACE,sBAAKC,UAAU,YAAYC,MAAO,CAAEC,MAAO,SAA3C,UACE,qBAAKC,IAAKN,EAAQG,UAAU,eAAeI,IAAKP,IAChD,sBAAKG,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BJ,IAC5B,mBAAGI,UAAU,YAAb,SAA0BK,KAAKC,MAAMR,QAEvC,oBAAIE,UAAU,8BAAd,SACGD,EAAYQ,KAAI,SAACC,GAChB,OACE,oBAAIR,UAAU,kBAAd,SACGQ,GADkCA,aCiElCC,EAzEH,WACV,IADgB,EAIcC,mBAAS,IAJvB,mBAITC,EAJS,KAIAC,EAJA,OAKYF,mBAAS,IALrB,mBAKTG,EALS,KAKDC,EALC,OAMUJ,mBAAS,WANnB,mBAMTK,EANS,KAMFC,EANE,KAQhBC,qBAAU,WACRC,IACAJ,EAAU,MACT,CAACC,IAEJ,IAAMG,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,mCAAD,OACSL,EADT,mBAbf,WAae,oBAZd,qCAWE,cACVM,EADU,gBAIGA,EAASC,OAJZ,OAIVC,EAJU,OAMhBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAPD,2CAAH,qDAmBf,OACE,qBAAKxB,UAAU,OAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,yBAAd,yBAEA,qBAAK2B,MAAM,gCAAX,SACE,uBAAMC,SAVI,SAACC,GACjBA,EAAEC,iBACFd,EAASH,IAQH,UACE,qBAAKb,UAAU,OAAf,SACE,uBACEC,MAAO,CAAEC,MAAO,SAChB6B,KAAK,OACL/B,UAAU,eACVgC,YAAY,gBACZC,MAAOpB,EACPqB,SAtBO,SAACL,GACpBf,EAAUe,EAAEM,OAAOF,YAwBX,qBAAKN,MAAM,gCAAX,SACE,wBAAQI,KAAK,SAAS/B,UAAU,kBAAhC,2BAON,qBAAKA,UAAU,0CAAf,SACGW,EAAQJ,KAAI,SAAC6B,GAAD,OACX,cAAC,EAAD,CAEExC,MAAOwC,EAAOA,OAAOC,MACrBxC,OAAQuC,EAAOA,OAAOE,MACtBxC,SAAUsC,EAAOA,OAAOtC,SACxBC,YAAaqC,EAAOA,OAAOG,iBAJtBH,EAAOA,OAAOC,kBCtDlBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61b5e43a.chunk.js","sourcesContent":["import React from \"react\";\r\n// import \"./recipe.style\";\r\n\r\nconst Recipe = ({ title, imgSrc, calories, ingredients }) => {\r\n  return (\r\n    <div className=\"card mt-5\" style={{ width: \"18rem\" }}>\r\n      <img src={imgSrc} className=\"card-img-top\" alt={imgSrc} />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{title}</h5>\r\n        <p className=\"card-text\">{Math.round(calories)}</p>\r\n      </div>\r\n      <ul className=\"list-group list-group-flush\">\r\n        {ingredients.map((ingredient) => {\r\n          return (\r\n            <li className=\"list-group-item\" key={ingredient}>\r\n              {ingredient}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {/* <div className=\"card-body\"></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// components\nimport Recipe from \"./components/Recipe.component\";\n\nconst App = () => {\n  const APP_ID = \"920ddb5b\";\n  const APP_KEY = \"d8990b5525b40092edb4c924cb850f76\";\n\n  const [Recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n\n  useEffect(() => {\n    getRecipe();\n    setSearch(\"\");\n  }, [query]);\n\n  const getRecipe = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  // Update Search\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n  return (\n    <div className=\"main\">\n      <div className=\"container mt-3\">\n        <h1 className=\"text-center text-white\">Recipes App</h1>\n\n        <div class=\"d-flex justify-content-center\">\n          <form onSubmit={getSearch}>\n            <div className=\"mb-3\">\n              <input\n                style={{ width: \"500px\" }}\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Search Recipe\"\n                value={search}\n                onChange={updateSearch}\n              />\n            </div>\n            <div class=\"d-flex justify-content-center\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"d-flex justify-content-around flex-wrap\">\n          {Recipes.map((recipe) => (\n            <Recipe\n              key={recipe.recipe.label}\n              title={recipe.recipe.label}\n              imgSrc={recipe.recipe.image}\n              calories={recipe.recipe.calories}\n              ingredients={recipe.recipe.ingredientLines}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}